services:
  backend:
    container_name: backend
    env_file:
      - ${ENV_FILE:-.env}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:${BACKEND_PORT}"
    networks:
      - custom
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASS}

    command: "gunicorn -c conf/gunicorn.conf.py 'auth.run:make_app()'"

  postgres:
    container_name: postgres
    image: postgres:13.0-alpine
    env_file:
      - ${ENV_FILE:-.env}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - custom
    ports:
      - "2344:${POSTGRES_PORT}"

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:${REDIS_PORT}"
    networks:
      - custom
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis_data:/data



networks:
  custom:
    driver: bridge

volumes:
  redis_data:
